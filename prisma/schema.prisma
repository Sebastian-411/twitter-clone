// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  username String?
  bio String?
  email String? @unique
  emailVerify DateTime?
  image String?
  coverImage String?
  profileImage  String?
  hashedPassword String?
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  following String[] @db.ObjectId
  hasNotification Boolean?

  post Post[]
  comments Comment[]
  notification Notification[]
}

model Post {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  userId String @db.ObjectId
  likedIds String[] @db.ObjectId

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  comments Comment[]
}

model Comment {
    id String @id @default(auto()) @map("_id") @db.ObjectId
    body String
    createAt DateTime @default(now())
    updateAt DateTime @updatedAt
    userId String @db.ObjectId
    postId String @db.ObjectId

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

}

model Notification {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  body String
  userId String @db.ObjectId
  createAt String @db.ObjectId 

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}